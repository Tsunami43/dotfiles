return {
	{
		"olimorris/codecompanion.nvim",
		dependencies = {
			"nvim-lua/plenary.nvim",
			"nvim-treesitter/nvim-treesitter",
			{ "echasnovski/mini.nvim", version = "*" }, -- –î–ª—è mini.diff
		},
		config = function()
			-- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ mini.diff –¥–ª—è inline diff
			require("mini.diff").setup({
				view = {
					style = "sign", -- –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞–∫ –∑–Ω–∞–∫–∏
					priority = 199,
				},
				mappings = {
					-- –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
					apply = "gda", -- DiffAccept - –ø—Ä–∏–Ω—è—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ
					reset = "gdr", -- DiffReject - –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ
					textobject = "gh", -- –í—ã–¥–µ–ª–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ
					goto_first = "[H", -- –ö –ø–µ—Ä–≤–æ–º—É –∏–∑–º–µ–Ω–µ–Ω–∏—é
					goto_prev = "[h", -- –ö –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –∏–∑–º–µ–Ω–µ–Ω–∏—é
					goto_next = "]h", -- –ö —Å–ª–µ–¥—É—é—â–µ–º—É –∏–∑–º–µ–Ω–µ–Ω–∏—é
					goto_last = "]H", -- –ö –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –∏–∑–º–µ–Ω–µ–Ω–∏—é
				},
			})

			require("codecompanion").setup({
				opts = {
					system_prompt = function(opts)
						return "–û—Ç–≤–µ—á–∞–π –≤—Å–µ–≥–¥–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º."
					end,
				},
				display = {
					chat = {
						auto_scroll = false,
						keymaps = {
							send = {
								modes = { n = "<C-s>", i = "<C-s>" },
								opts = {},
							},
							close = {
								modes = { n = "<C-c>", i = "<C-c>" },
								opts = {},
							},
						},
						icons = {
							buffer_pin = "Ôêµ ",
							buffer_watch = "üëÄ ",
						},
						debug_window = {
							width = vim.o.columns - 5,
							height = vim.o.lines - 2,
						},
						token_count = function(tokens, adapter)
							return " (" .. tokens .. " tokens)"
						end,
						window = {
							layout = "vertical",
							position = "right",
							border = "single",
							height = 0.8,
							width = 0.32,
							relative = "editor",
							full_height = true,
							sticky = false,
							opts = {
								breakindent = true,
								cursorcolumn = false,
								cursorline = false,
								foldcolumn = "0",
								linebreak = true,
								list = false,
								numberwidth = 1,
								signcolumn = "no",
								spell = false,
								wrap = true,
							},
						},
					},
					action_palette = {
						width = 95,
						height = 10,
						prompt = "Prompt ",
						provider = "telescope",
						opts = {
							show_default_actions = true,
							show_default_prompt_library = true,
						},
					},
					diff = {
						enabled = true,
						provider = "inline", -- Inline diff –ø—Ä—è–º–æ –≤ —Ñ–∞–π–ª–µ
						close_chat_at = 240, -- Close chat buffer if columns < 240
						-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ inline diff
						opts = {
							"internal",
							"filler",
							"closeoff",
							"algorithm:patience",
							"followwrap",
							"linematch:120",
						},
					},
				},
				strategies = {
					chat = {
						adapter = "openai",
						roles = {
							llm = function(adapter)
								return "CodeCompanion (" .. adapter.formatted_name .. ")"
							end,
							user = "Tsunami43",
						},
						-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ tools —Å approval workflow
						tools = {
							-- –¢—Ä–µ–±–æ–≤–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è cmd_runner
							cmd_runner = {
								opts = {
									requires_approval = true, -- –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥
								},
							},
							-- –¢—Ä–µ–±–æ–≤–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
							insert_edit_into_file = {
								opts = {
									requires_approval = true, -- –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ñ–∞–π–ª–æ–≤
								},
							},
						},
						-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ slash commands –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
						slash_commands = {
							-- –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –±—É—Ñ–µ—Ä–∞
							["buffer"] = {
								description = "–î–æ–±–∞–≤–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞",
								callback = "strategies.chat.slash_commands.buffer",
								opts = {
									provider = "default",
									contains_code = true,
								},
							},
							-- –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
							["file"] = {
								description = "–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞",
								callback = "strategies.chat.slash_commands.file",
								opts = {
									provider = "telescope", -- –ò—Å–ø–æ–ª—å–∑—É–µ–º telescope –¥–ª—è –≤—ã–±–æ—Ä–∞
									contains_code = true,
								},
							},
						},
					},
					inline = {
						adapter = "openai",
						-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å inline –∏–∑–º–µ–Ω–µ–Ω–∏—è
						opts = {
							-- –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å diff –¥–ª—è –≤—Å–µ—Ö inline –æ–ø–µ—Ä–∞—Ü–∏–π
							show_diff = true,
							-- –¢—Ä–µ–±–æ–≤–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º
							confirm = true,
							-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω—è—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
							auto_apply = false,
						},
						-- –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –¥–ª—è Super Diff (inline provider)
						keymaps = {
							accept_change = {
								modes = { n = "gda" }, -- DiffAccept - –ø—Ä–∏–Ω—è—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ
							},
							reject_change = {
								modes = { n = "gdr" }, -- DiffReject - –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ
							},
							always_accept = {
								modes = { n = "gdy" }, -- DiffYolo - –ø—Ä–∏–Ω—è—Ç—å –≤—Å–µ –±–µ–∑ –≤–æ–ø—Ä–æ—Å–æ–≤
							},
						},
					},
				},
				adapters = {
					openai = function()
						return require("codecompanion.adapters").extend("openai", {
							env = {
								api_key = "cmd:echo $OPENAI_API_KEY",
							},
							model = "gpt-3.5-turbo",
							temperature = 0.7,
							top_p = 1,
						})
					end,
				},
			})

			-- –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –¥–ª—è CodeCompanion
			local opts = { noremap = true, silent = true }

			-- –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã CodeCompanion
			vim.keymap.set("v", "<leader>ae", "<cmd>CodeCompanionChat<cr>", opts)
			vim.keymap.set("n", "<leader>at", "<cmd>CodeCompanionChat<cr>", opts)

			-- Actions (action palette)
			vim.keymap.set({ "n", "v" }, "<leader>aa", "<cmd>CodeCompanionActions<cr>", opts)

			-- Inline assistant —Å –ø—Ä—è–º—ã–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
			vim.keymap.set("v", "<leader>ai", function()
				-- –ü–æ–ª—É—á–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
				local start_line = vim.fn.line("'<")
				local end_line = vim.fn.line("'>")
				local lines = vim.api.nvim_buf_get_lines(0, start_line - 1, end_line, false)
				local selected_text = table.concat(lines, "\n")

				-- –û—Ç–∫—Ä—ã–≤–∞–µ–º inline assistant –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
				vim.cmd("CodeCompanionInline")
			end, opts)

			-- –ë—ã—Å—Ç—Ä–æ–µ inline —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
			vim.keymap.set("n", "<leader>ai", function()
				-- Inline —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–∏
				vim.cmd("CodeCompanionInline")
			end, opts)

			-- Toggle chat buffer
			vim.keymap.set("n", "<leader>ac", "<cmd>CodeCompanionChat Toggle<cr>", opts)

			-- –ë—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–æ–≤ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
			vim.keymap.set("n", "<leader>af", function()
				-- –û—Ç–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç –∏ –≤—ã–∑—ã–≤–∞–µ–º –∞–≥–µ–Ω—Ç–∞
				vim.cmd("CodeCompanionChat @{full_stack_dev}")
				-- –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞ –∫–∞–∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç
				vim.defer_fn(function()
					vim.cmd("CodeCompanionChat /buffer") -- Slash command –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±—É—Ñ–µ—Ä–∞
				end, 200)
			end, vim.tbl_extend("force", opts, { desc = "CodeCompanion: Full Stack Dev + Current File" }))

			vim.keymap.set("n", "<leader>ar", function()
				vim.cmd("CodeCompanionChat @{code_reviewer}")
				vim.defer_fn(function()
					vim.cmd("CodeCompanionChat /buffer") -- Slash command –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±—É—Ñ–µ—Ä–∞
				end, 200)
			end, vim.tbl_extend("force", opts, { desc = "CodeCompanion: Code Reviewer + Current File" }))

			vim.keymap.set("n", "<leader>ab", function()
				vim.cmd("CodeCompanionChat @{bug_hunter}")
				vim.defer_fn(function()
					vim.cmd("CodeCompanionChat /buffer") -- Slash command –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±—É—Ñ–µ—Ä–∞
				end, 200)
			end, vim.tbl_extend("force", opts, { desc = "CodeCompanion: Bug Hunter + Current File" }))

			-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –ø—Ä–æ–µ–∫—Ç–∞
			vim.keymap.set("n", "<leader>ap", function()
				-- –ê–Ω–∞–ª–∏–∑ –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
				vim.cmd(
					"CodeCompanionChat @{full_stack_dev} –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ —É–ª—É—á—à–µ–Ω–∏—è"
				)
				vim.defer_fn(function()
					vim.cmd("CodeCompanionChat /file") -- Slash command –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
				end, 200)
			end, vim.tbl_extend("force", opts, { desc = "CodeCompanion: Project Analysis" }))

			vim.keymap.set("n", "<leader>at", function()
				-- –ß–∞—Ç —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
				vim.cmd("CodeCompanionChat")
				vim.defer_fn(function()
					vim.cmd("CodeCompanionChat /buffer") -- Slash command –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±—É—Ñ–µ—Ä–∞
				end, 200)
			end, vim.tbl_extend("force", opts, { desc = "CodeCompanion: Chat + Current File" }))

			-- –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ inline –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
			vim.keymap.set("n", "<leader>ae", function()
				-- –ü—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
				vim.cmd("CodeCompanionInline ApplyAll")
			end, vim.tbl_extend("force", opts, { desc = "CodeCompanion: Apply All Changes" }))

			vim.keymap.set("n", "<leader>ar", function()
				-- –û—Ç–∫–ª–æ–Ω–∏—Ç—å –≤—Å–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
				vim.cmd("CodeCompanionInline RejectAll")
			end, vim.tbl_extend("force", opts, { desc = "CodeCompanion: Reject All Changes" }))
		end,
	},
	-- Makrdown preview
	{
		"MeanderingProgrammer/render-markdown.nvim",
		dependencies = {
			"nvim-treesitter/nvim-treesitter",
			"echasnovski/mini.nvim", -- –∏–ª–∏ –¥—Ä—É–≥–æ–π UI-–ø–ª–∞–≥–∏–Ω
		},
		ft = { "markdown", "codecompanion" },
	},
}
